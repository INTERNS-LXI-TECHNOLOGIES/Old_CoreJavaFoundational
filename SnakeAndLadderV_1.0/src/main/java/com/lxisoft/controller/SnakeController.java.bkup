package com.lxisoft.controller;

import java.util.*;
import java.util.stream.*;
import org.slf4j.*;
import com.lxisoft.model.*;
import com.lxisoft.util.*;


public class SnakeController {
    
    private static final Logger log = LoggerFactory.getLogger(SnakeController.class);

    private int maxx;

    private int maxy;

    private List<Snake> snakes;

    private List<Integer> coordinates;

    public SnakeController(int maxx , int maxy) {

        SnakeController.log.info("Initializing SnakeController Succesfull");

        try {

            if(maxx < 8 || maxy < 8) {

                throw new Exception("Game Requires Atleast 10 x 10 coumns");
            }

            this.snakes = new ArrayList<>();

            this.coordinates = new ArrayList<>();

            for(int i = 1; i <= (maxx * maxy); i++) {

                this.coordinates.add(i);
            }

            this.maxx = maxx;
            this.maxy = maxy;

        } catch (Exception e) {

            SnakeController.log.error("Exception at " , e);
        }
    }

    // Gettters

    public List<Integer> getCoordinates() {

        return this.coordinates;
    }

    public List<Snake> getSnakes(int noOfSnakes) {

        return createSnakes(noOfSnakes);
    }

    // Setters

    public void setCoordinates(List<Integer> coords) {

        this.coordinates = coords;
    }

    // Other

    public List<Snake> createSnakes(int noOfSnakes) {
        
        SnakeController.log.info("createSnakes() running ");

        for(int i = 0;i < noOfSnakes;i++) {
    
            var start = CRandom.getRemove(this.coordinates);
            var end = CRandom.getRemove(this.coordinates , start);

            Set<Integer> coords = Point.getMapping(start , end);
    
            var snake = new Snake();
            snake.setId(i);
            snake.setBoxIds(coords);
            
            this.snakes.add(snake);
    
        }   

        SnakeController.log.info("createSnakes() end ");
        
        return this.snakes;
    }
}